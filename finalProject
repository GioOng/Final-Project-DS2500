#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Apr  4 21:08:18 2021

@author: justinwoo
"""

#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Mar 26 20:07:00 2021

@author: gioong
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import csv

def clean_data(filename):
    ''' Read and filter data to data points that we are going to utilize
    throughout the project '''
    data = pd.read_csv(filename)
    
    # Remove all players not drafted in first two rounds (top 60 picks)
    first_round = data[(data['Pk'] <= 30)]
    first_round = first_round.iloc[:, :-10]
    
    
    return first_round
        
        
def clean_allstars(filename):
    
    allstars = []
    with open(filename, errors='ignore') as file:
        # reading a csv file
        reader = csv.reader(file, delimiter=',')
        
        for row in reader:
            if row[0] != 'PG':
                allstars.append(row[0])
                allstars.append(row[1])
                allstars.append(row[2])
                allstars.append(row[3])
                allstars.append(row[4])
    
    while("" in allstars) :
        allstars.remove("")
        
        
    return allstars

    
def pick_number_analysis(data):
    grouped_data = data.groupby(['Pk']).sum()   
    x = grouped_data.index
    y = grouped_data['allstar']
    plt.bar(x, y)
    plt.title('Number of Allstars For Each Draft Pick Number')
    plt.xlabel('Draft pick Number')
    plt.ylabel('Number of Allstars')
    plt.xticks(np.arange(min(x), max(x) + 1, 2))
    plt.yticks(np.arange(min(y), max(y) + 1, 1))
    plt.grid(axis = 'y')
    plt.show()
    
def college_attended_analysis(data):
    data['College'] = data['College'].replace('0', 'Highschool')

    grouped_data = data.groupby(['College']).sum()
    significant = grouped_data[grouped_data['allstar'] > 1]
    x = significant.index
    y = significant['allstar']
    plt.bar(x,y)
    plt.title('Number of Allstars Produced From Each University')
    plt.xlabel('Name of College (if not attended, all highschools are grouped')
    plt.ylabel('Number of Allstars')
    plt.xticks(rotation = 90)
    plt.yticks(np.arange(min(y), max(y) + 1))
    plt.grid(axis = 'y')

    plt.show()
    
    
def nba_team_analysis(data):
    grouped_data = data.groupby(['Team']).sum()
    significant = grouped_data[grouped_data['allstar'] > 1]
    x = significant.index
    y = significant['allstar']
    plt.bar(x,y)
    plt.title('Number of Allstars Produced From Each Teams Draft Picks')
    plt.xlabel('NBA Team')
    plt.ylabel('Number of Allstars')
    plt.xticks(rotation = 90)
    plt.yticks(np.arange(min(y), max(y) + 1))
    plt.grid(axis = 'y')

    plt.show()

def longevity_analysis(data):
    ax = sns.relplot(x = 'Pk', y ='Yrs', size = 'All.Star', hue = 'VORP',
                     data = data, palette = 'seismic')
    ax.set(title = 'Comparing Longevity of a Player with Draft Pick Number',
           xlabel = 'Draft Pick Number', ylabel = 'Years Played' )
    
    
def get_points(data, column_name):
    recent = data[data['Draft_Yr'] >= 2000]
    grouped_data = recent.groupby(['Pk']).mean()
    averaged_data = grouped_data[column_name]
    return averaged_data
    
    
def main():
    data = clean_data('draft_data.csv')

    recent = data[data['Draft_Yr'] >= 2000]
    all_stars = clean_allstars('ALLSTARS.CSV')
    
    recent['allstar'] = False
    for index, row in recent.iterrows():
        if row[1] in all_stars:
            recent.loc[index,'allstar'] = True
    
    print(recent[recent['Player'].str.contains('Victor Oladipo')])
    
    # pick = pick_number_analysis(data)
    # pick = pick_number_analysis(recent)
    # college = college_attended_analysis(data)
    # team = nba_team_analysis(data)
    # print(data['allstar'])
    get_points(data, 'PTS')
    longevity_analysis(data)

main()
    
